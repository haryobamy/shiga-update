__d(function(g,r,i,a,m,e,d){var t=r(d[0]);Object.defineProperty(e,"__esModule",{value:!0}),e.create=async function(t){return await u.default.create(t)},e.get=async function(t){return u.default.get(t)},e.isAutoFillAvalilable=function(){return u.default.isAutoFillAvalilable()},e.isSupported=function(){return u.default.isSupported()};var u=t(r(d[1]))},7780,[1,7783]);
__d(function(g,r,i,a,m,e,d){var t=r(d[0]);Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var n=t(r(d[1])),s=r(d[2]),o=r(d[3]);const l=["signal"],b=["largeBlob"],u=["mediation","signal"],c=["largeBlob"];e.default={get name(){return"ReactNativePasskeys"},isAutoFillAvalilable(){const t=window.PublicKeyCredential;return void 0===t.isConditionalMediationAvailable?new Promise(t=>t(!1)):t.isConditionalMediationAvailable()},isSupported:()=>void 0!==window?.PublicKeyCredential&&"function"==typeof window.PublicKeyCredential,async create(t){let{signal:u}=t,c=(0,n.default)(t,l);if(!this.isSupported)throw new s.NotSupportedError;const p=await navigator.credentials.create({signal:u,publicKey:Object.assign({},c,{challenge:(0,o.base64URLStringToBuffer)(c.challenge),user:Object.assign({},c.user,{id:(0,o.base64URLStringToBuffer)(c.user.id)}),excludeCredentials:c.excludeCredentials?.map(t=>Object.assign({},t,{id:(0,o.base64URLStringToBuffer)(t.id),transports:t.transports??void 0}))})}),B=p?.getClientExtensionResults();f(c.extensions,B);const{largeBlob:S}=B,v=(0,n.default)(B,b);return p?{id:p.id,rawId:p.id,response:{clientDataJSON:(0,o.bufferToBase64URLString)(p.response.clientDataJSON),attestationObject:(0,o.bufferToBase64URLString)(p.response.attestationObject),getPublicKey:()=>p.response.getPublicKey()},authenticatorAttachment:void 0,type:"public-key",clientExtensionResults:Object.assign({},v,S&&{largeBlob:Object.assign({},S,{blob:S?.blob?(0,o.bufferToBase64URLString)(S.blob):void 0})})}:null},async get(t){let{mediation:s,signal:l}=t,b=(0,n.default)(t,u);const p=await navigator.credentials.get({mediation:s,signal:l,publicKey:Object.assign({},b,{extensions:Object.assign({},b.extensions,{largeBlob:b.extensions?.largeBlob?.write?Object.assign({},b.extensions?.largeBlob,{write:(0,o.base64URLStringToBuffer)(b.extensions.largeBlob.write)}):b.extensions?.largeBlob}),challenge:(0,o.base64URLStringToBuffer)(b.challenge),allowCredentials:b.allowCredentials?.map(t=>Object.assign({},t,{id:(0,o.base64URLStringToBuffer)(t.id),transports:t.transports??void 0}))})}),B=p?.getClientExtensionResults();f(b.extensions,B);const{largeBlob:S}=B,v=(0,n.default)(B,c);return p?{id:p.id,rawId:p.id,response:{clientDataJSON:(0,o.bufferToBase64URLString)(p.response.clientDataJSON),authenticatorData:(0,o.bufferToBase64URLString)(p.response.authenticatorData),signature:(0,o.bufferToBase64URLString)(p.response.signature),userHandle:p.response.userHandle?(0,o.bufferToBase64URLString)(p.response.userHandle):void 0},authenticatorAttachment:void 0,clientExtensionResults:Object.assign({},v,S&&{largeBlob:Object.assign({},S,{blob:S?.blob?(0,o.bufferToBase64URLString)(S.blob):void 0})}),type:"public-key"}:null}};const f=(t,n)=>{if(n)for(const s in t)console.log(s,n[s]),void 0===n[s]&&alert(`Webauthn extension ${s} is undefined -- your browser probably doesn't know about it`)}},7783,[1,307,7784,7785]);
__d(function(g,r,i,a,m,e,d){Object.defineProperty(e,"__esModule",{value:!0}),e.UnknownError=e.PasskeyError=e.NotSupportedError=void 0;class s extends Error{constructor({name:s,message:o,cause:t}){super(),this.name=s,this.message=o,this.cause=t}}e.PasskeyError=s;e.UnknownError=class extends s{};e.NotSupportedError=class extends s{constructor(s="Passkey are not supported"){super({name:"NotSupportedError",message:s})}}},7784,[]);
__d(function(g,r,_i,a,m,e,d){Object.defineProperty(e,"__esModule",{value:!0}),e.base64URLStringToBuffer=function(n){const t=n.replace(/-/g,'+').replace(/_/g,'/'),o=(4-t.length%4)%4,f=t.padEnd(t.length+o,'='),c=atob(f),l=new ArrayBuffer(c.length),u=new Uint8Array(l);for(let n=0;n<c.length;n++)u[n]=c.charCodeAt(n);return l},e.bufferToBase64URLString=function(n){const t=new Uint8Array(n);let o='';for(const n of t)o+=String.fromCharCode(n);return btoa(o).replace(/\+/g,'-').replace(/\//g,'_').replace(/=/g,'')}},7785,[]);